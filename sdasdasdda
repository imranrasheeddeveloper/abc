import SwiftUI

struct ActivityView: View {
    var body: some View {
        VStack(spacing: 0) {
            Spacer()
            RoundedRectangle(cornerRadius: 10)
                .frame(width: 60, height: 6)
                .foregroundColor(Color.gray)
                .padding(.top, 8)
            
            VStack(alignment: .leading, spacing: 16) {
                Text("Title")
                    .font(.headline)
                Text("Subtitle")
                    .font(.subheadline)
                    .foregroundColor(.gray)
                
                ScrollView(.horizontal, showsIndicators: false) {
                    HStack(spacing: 16) {
                        ForEach(0..<5) { _ in
                            Image(systemName: "person.circle")
                                .resizable()
                                .frame(width: 40, height: 40)
                                .padding(8)
                                .background(Color.blue.opacity(0.2))
                                .clipShape(Circle())
                        }
                    }
                    .padding(.horizontal)
                }
                
                Divider()
                
                List {
                    ForEach(0..<10, id: \.self) { index in
                        HStack {
                            Image(systemName: "doc.circle")
                                .font(.title3)
                            Text("Item \(index)")
                                .font(.subheadline)
                        }
                    }
                    .listRowSeparator(.hidden)
                    .listRowInsets(EdgeInsets(top: 0, leading: 0, bottom: 0, trailing: 0))
                }
                .listStyle(PlainListStyle())
            }
            .padding(.horizontal)
            
            Spacer()
        }
        .background(Color.white)
        .cornerRadius(20)
        .shadow(radius: 10)
        .frame(maxHeight: .infinity, alignment: .bottom)

        .gesture(
            DragGesture()
                .onChanged { value in
                    if value.translation.height < 0 {
                        // Handle your dismissal logic here
                    }
                }
        )
    }
}


struct ContentView: View {
   
    var body: some View {
        VStack {
            ActivityView()
        }
        
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

